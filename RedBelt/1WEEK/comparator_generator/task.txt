Задание по программированию: Генератор компараторов

Давайте представим, что вы разрабатываете инновационный сервис поиска авиабилетов 
AviaScanner. В вашем сервисе авиабилет представляется в виде структуры  

struct Date {
  int year, month, day;
};
struct Time {
  int hours, minutes;
};
struct AirlineTicket {
  string from;
  string to;
  string airline;
  Date departure_date;
  Time departure_time;
  Date arrival_date;
  Time arrival_time;
  uint64_t price;
};

В данный момент вы работаете над функцией сортировки результатов поиска. 
Пользователь вводит свой запрос и получает список подходящих билетов. Дальше 
он может задавать параметры сортировки этого списка. Например, сначала по цене, 
затем по времени вылета и, наконец, по аэропорту прилёта.

Чтобы реализовать сортировку как в примере, можно воспользоваться алгоритмом цифровой сортировки.

Напишите макрос SORT_BY, который принимает в качестве параметра имя поля структуры AirlineTicket. 
Вызов sort(begin(tixs), end(tixs), SORT_BY(some_field)) должен приводить к сортировке вектора 
tixs по полю some_field.

Вам дан файл airline_ticket.h, содержащий объявления структур Time, Date и AirlineTicket, а 
также заготовка решения в виде cpp-файла sort_by.cpp. Пришлите на проверку cpp-файл, который

подключает заголовочный файл airline_ticket.h

содержит макрос SORT_BY

содержит определения операторов, необходимых для использования классов Date и Time в алгоритме 
сортировки и макросе ASSERT_EQUAL (формат вывода в поток можете выбрать произвольный)